<?xml version="1.0"?>
<featureStaging xmlns="http://microsoft.com/TilFeatureStaging-Schema.xsd">
    <!-- See doc/feature_flags.md for more info.  -->
    <feature>
        <name>Feature_ReceiveIncomingHandoff</name>
        <description>OpenConsole should be able to receive incoming connections</description>
        <stage>AlwaysEnabled</stage>
        <alwaysDisabledBrandingTokens>
            <brandingToken>WindowsInbox</brandingToken>
        </alwaysDisabledBrandingTokens>
    </feature>

    <feature>
        <name>Feature_EditableUnfocusedAppearance</name>
        <description>The unfocused appearance section in profiles in the SUI that allows users to create and edit unfocused appearances.</description>
        <stage>AlwaysEnabled</stage>
        <alwaysDisabledReleaseTokens/>
    </feature>

    <feature>
        <name>Feature_AttemptHandoff</name>
        <description>conhost should try to hand connections over to OpenConsole</description>
        <stage>AlwaysDisabled</stage>
        <alwaysEnabledBrandingTokens>
            <brandingToken>WindowsInbox</brandingToken>
        </alwaysEnabledBrandingTokens>
    </feature>

    <feature>
        <name>Feature_ConhostDxEngine</name>
        <description>Controls whether conhost supports the DX engine and the UseDx registry key</description>
        <stage>AlwaysEnabled</stage>
        <alwaysDisabledBrandingTokens>
            <brandingToken>WindowsInbox</brandingToken>
        </alwaysDisabledBrandingTokens>
    </feature>
    <feature>
        <name>Feature_DxEngineShaderSupport</name>
        <description>Controls whether the DX engine is built with shader support.</description>
        <stage>AlwaysEnabled</stage>
        <alwaysDisabledBrandingTokens>
            <brandingToken>WindowsInbox</brandingToken>
        </alwaysDisabledBrandingTokens>
    </feature>

    <feature>
        <name>Feature_UseNumpadEventsForClipboardInput</name>
        <description>Controls whether the clipboard converter (and ConPTY InputStateMachine) uses Numpad events instead of UChar</description>
        <stage>AlwaysDisabled</stage>
        <alwaysEnabledBrandingTokens>
            <!--
                To reduce the risk of compatibility issues inside Windows, we're going to continue using the old
                version of GetQuickCharWidth to determine whether a character should be synthesized into numpad
                events.
            -->
            <brandingToken>WindowsInbox</brandingToken>
        </alwaysEnabledBrandingTokens>
    </feature>

    <feature>
        <name>Feature_AtlasEngine</name>
        <description>If enabled, AtlasEngine and the experimental.useAtlasEngine setting are compiled into the project</description>
        <stage>AlwaysEnabled</stage>
        <alwaysDisabledBrandingTokens>
            <brandingToken>Release</brandingToken>
            <brandingToken>WindowsInbox</brandingToken>
        </alwaysDisabledBrandingTokens>
    </feature>

    <feature>
        <name>Feature_NearbyFontLoading</name>
        <description>Controls whether fonts in the same directory as the binary are used during rendering. Disabled for conhost so that it doesn't iterate the entire system32 directory.</description>
        <stage>AlwaysEnabled</stage>
        <alwaysDisabledBrandingTokens>
            <brandingToken>WindowsInbox</brandingToken>
        </alwaysDisabledBrandingTokens>
    </feature>

    <feature>
        <name>Feature_AdjustIndistinguishableText</name>
        <description>If enabled, the foreground color will, when necessary, be automatically adjusted to make it more visible.</description>
        <stage>AlwaysDisabled</stage>
        <alwaysEnabledBrandingTokens>
            <brandingToken>Dev</brandingToken>
        </alwaysEnabledBrandingTokens>
    </feature>
    
    <feature>
        <name>Feature_VtPassthroughMode</name>
        <description>Enables passthrough option per profile in Terminal and ConPTY ability to use passthrough API dispatch engine</description>
        <stage>AlwaysDisabled</stage>
        <!-- Did it this way instead of "release tokens" to ensure it won't go into Windows Inbox either... -->
        <alwaysEnabledBrandingTokens>
            <brandingToken>Dev</brandingToken>
            <brandingToken>Preview</brandingToken>
        </alwaysEnabledBrandingTokens>
    </feature>

    <feature>
        <name>Feature_VtPassthroughModeSettingInUI</name>
        <description>Enables the setting gated by Feature_VtPassthroughMode to appear in the UI</description>
        <stage>AlwaysDisabled</stage>
        <alwaysEnabledBrandingTokens>
            <brandingToken>Dev</brandingToken>
	    <!-- Unlike Feature_VtPassthroughMode, this is not enabled in Preview -->
        </alwaysEnabledBrandingTokens>
    </feature>

    <feature>
        <name>Feature_IsolatedMonarchMode</name>
        <description>Enables a test flag for MSFT:38540483. When enabled, if we ever create a null Monarch, we'll stealthily try to fall back to an in-proc monarch instance.</description>
        <stage>AlwaysEnabled</stage>
        <!-- Did it this way instead of "release tokens" to ensure it will go into Windows Inbox -->
        <alwaysDisabledBrandingTokens>
            <brandingToken>Dev</brandingToken>
            <brandingToken>Preview</brandingToken>
        </alwaysDisabledBrandingTokens>
    </feature>

    <feature>
        <name>Feature_DECPSViaMidiPlayer</name>
        <description>Enables playing sound via DECPS using the MIDI player.</description>
        <stage>AlwaysDisabled</stage>
        <!-- We're disabling this for WindowsInbox and Stable because it requires an additional
             package dependency or library dependency. -->
        <alwaysEnabledBrandingTokens>
            <brandingToken>Dev</brandingToken>
            <brandingToken>Preview</brandingToken>
        </alwaysEnabledBrandingTokens>
    </feature>

    <feature>
        <name>Feature_ScrollbarMarks</name>
        <description>Enables the experimental scrollbar marks feature.</description>
        <stage>AlwaysDisabled</stage>
        <!-- Did it this way instead of "release tokens" to ensure it won't go into Windows Inbox either... -->
        <alwaysEnabledBrandingTokens>
            <brandingToken>Dev</brandingToken>
            <brandingToken>Preview</brandingToken>
        </alwaysEnabledBrandingTokens>
    </feature>

</featureStaging>
