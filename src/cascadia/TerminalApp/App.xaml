<!--
    Copyright (c) Microsoft Corporation. All rights reserved. Licensed under
    the MIT License. See LICENSE in the project root for license information.
-->
<Toolkit:XamlApplication x:Class="TerminalApp.App"
                         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                         xmlns:TA="using:TerminalApp"
                         xmlns:Toolkit="using:Microsoft.Toolkit.Win32.UI.XamlHost"
                         xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                         xmlns:local="using:TerminalApp"
                         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                         mc:Ignorable="d">
    <!--
        If you want to prove this works, then add `RequestedTheme="Light"` to
        the properties on the XamlApplication
    -->
    <Toolkit:XamlApplication.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--  Include the MUX Controls resources  -->
                <XamlControlsResources xmlns="using:Microsoft.UI.Xaml.Controls"
                                       ControlsResourcesVersion="Version2" />
                <ResourceDictionary>

                    <!--
                        We're going to apply this style to the root Grid acting
                        as the tab row, because we need to be able to set its
                        `Background` property to "{ThemeResource
                        ApplicationPageBackgroundThemeBrush}" so it will be colored
                        appropriately for the theme, regardless of what we set the
                        RequestedTheme to
                    -->
                    <Style x:Name="BackgroundGridThemeStyle"
                           TargetType="Grid">
                        <Setter Property="Background" Value="{ThemeResource ApplicationPageBackgroundThemeBrush}" />
                    </Style>

                    <!--
                        We need to manually create the error text brush as a
                        theme-dependent brush. SystemControlErrorTextForegroundBrush
                        is unfortunately static.
                    -->
                    <SolidColorBrush x:Name="ErrorTextBrush"
                                     Color="{ThemeResource SystemErrorTextColor}" />

                    <!--  Suppress top padding  -->
                    <Thickness x:Key="TabViewHeaderPadding">9,0,8,0</Thickness>

                    <!--  Remove when implementing WinUI 2.6  -->
                    <Thickness x:Key="FlyoutContentPadding">12</Thickness>

                    <ResourceDictionary.ThemeDictionaries>
                        <ResourceDictionary x:Key="Dark">
                            <!--  Define resources for Dark mode here  -->

                            <!--
                                Originally, we were using the raw value of
                                ApplicationPageBackgroundThemeBrush here, which is
                                evaluated as SolidBackgroundFillColorBase. If we try
                                to use those resources directly though, we don't get
                                the properly themed versions. Presumably because the
                                App itself can't have it's RequestedTheme changed at
                                runtime.
                                
                                However, after more discussion with the WinUI
                                team, we determined that those colors don't
                                provide enough contrast. The color here (and in
                                light mode) were chosen for greater contrast.
                                
                                See GH #12356 for more history on the subject.
                            -->
                            <SolidColorBrush x:Key="TabViewBackground"
                                             Color="#0a0a0a" />

                            <StaticResource x:Key="UnfocusedBorderBrush"
                                            ResourceKey="ApplicationPageBackgroundThemeBrush" />


                        </ResourceDictionary>

                        <ResourceDictionary x:Key="Light">
                            <!--  Define resources for Light mode here  -->

                            <!--
                                GH #12398 has more history on this value, as well as GH #12400
                            -->
                            <SolidColorBrush x:Key="TabViewBackground"
                                             Color="#dadada" />

                            <StaticResource x:Key="UnfocusedBorderBrush"
                                            ResourceKey="ApplicationPageBackgroundThemeBrush" />
                        </ResourceDictionary>

                        <ResourceDictionary x:Key="HighContrast">
                            <!--  Define resources for HighContrast mode here  -->

                            <!--
                                MSFT:38264744
                                You'd think that if a key wasn't present in a ThemeDictionary,
                                it'd fall back to the original value. You'd be wrong - if you
                                provide a Light&dark version of a resource, but not the
                                HighContrast version, the resource loader will fall back to the
                                Light value.
                                
                                SystemColorButtonFaceColorBrush is the default background color for WinUI's TabViewBackground under high contrast mode.
                            -->
                            <StaticResource x:Key="TabViewBackground"
                                            ResourceKey="SystemColorButtonFaceColorBrush" />
                        </ResourceDictionary>

                    </ResourceDictionary.ThemeDictionaries>

                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>


    </Toolkit:XamlApplication.Resources>
</Toolkit:XamlApplication>
